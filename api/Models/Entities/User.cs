using System;
using System.Collections.Generic;

namespace Api.Models.Entities
{
    /// <summary>
    /// Represents a user account in the system.  A user may be an
    /// administrator, teacher or student depending on the assigned
    /// <see cref="Role"/>.  Passwords should be stored hashed and
    /// salted (see security guidelines) and never returned to the
    /// client.  Navigation properties link a user to the exams they
    /// create or participate in as well as classes they teach.
    /// </summary>
    public class User
    {
        /// <summary>
        /// Primary key.  Surrogate identity generated by the database.
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Unique email address for login and identification.  This
        /// field should be indexed and constrained to be unique.
        /// </summary>
        public string Email { get; set; } = string.Empty;

        /// <summary>
        /// Human friendly display name.  Optional for students who may
        /// be identified by a student code instead.
        /// </summary>
        public string? FullName { get; set; }

        /// <summary>
        /// Securely hashed and salted password.  Use a modern
        /// algorithm such as Argon2id or bcrypt【110133013481214†L193-L204】.  The raw
        /// password should never be stored or logged.
        /// </summary>
        public string PasswordHash { get; set; } = string.Empty;

        /// <summary>
        /// Role indicating the level of access (Admin, Teacher or
        /// Student).  Stored as an enum value but ultimately
        /// persisted as an integer or string column in the database.
        /// </summary>
        public Role Role { get; set; }

        /// <summary>
        /// Timestamp of when the user record was created (UTC).
        /// </summary>
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Timestamp of the last time this user record was updated
        /// (UTC).  Updated by the persistence layer.
        /// </summary>
        public DateTime UpdatedAt { get; set; } = DateTime.UtcNow;

        // Navigation properties

        /// <summary>
        /// Exams authored by this user (for teachers).  Students
        /// typically have no authored exams.
        /// </summary>
        public virtual ICollection<Exam> AuthoredExams { get; set; } = new List<Exam>();

        /// <summary>
        /// Classes taught by this user (for teachers).
        /// </summary>
        public virtual ICollection<Class> ClassesTeaching { get; set; } = new List<Class>();

        /// <summary>
        /// Exams assigned to this user as a participant (for students).
        /// </summary>
        public virtual ICollection<ExamStudent> ExamStudents { get; set; } = new List<ExamStudent>();

        /// <summary>
        /// Announcements created by this user.  Could be exam or class
        /// specific or global.
        /// </summary>
        public virtual ICollection<Announcement> Announcements { get; set; } = new List<Announcement>();

        /// <summary>
        /// Audit events recorded for actions taken by this user.
        /// </summary>
        public virtual ICollection<AuditEvent> AuditEvents { get; set; } = new List<AuditEvent>();
        public ICollection<Class>? EnrolledClasses { get; set; }

    }
}